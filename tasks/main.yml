#########################################################
# DO Community Playbooks: Wordpress on Ubuntu 18.04 LAMP
#########################################################
---
- name: Install prerequisites
  become: true
  apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
  tags: [ system ]

- name: Install LEMP Packages
  become: true
  apt: name={{ item }} update_cache=yes state=latest
  loop: [ 'nginx', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql' ]
  tags: [ system ]

- name: Install PHP Extensions
  become: true
  apt: name={{ item }} update_cache=yes state=latest
  loop: "{{ php_modules }}"
  tags: [ system ]

# Nginx Configuration
- name: Sets Nginx conf file
  become: true
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/sites-available/{{ http_conf }}"

- name: Enables new site
  become: true
  file:
    src: "/etc/nginx/sites-available/{{ http_conf }}"
    dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
    state: link
  notify: Reload Nginx

- name: Removes "default" site
  become: true
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: Reload Nginx

# MySQL Configuration
# - name: Ensure no user named 'sally' exists at all
#   mysql_user:
#     name: root
#     state: present
#   register: db_user

- name: Set the root password
  become: true
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    update_password: on_create
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql, mysql-root ]

- name: Create `/root/.my.cnf`  with root password credentials
  template:
    src:  my.mysql.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600
  become: true
  # notify: Restart MySQL

- name: Remove all anonymous user accounts
  become: true
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Remove the MySQL test database
  become: true
  mysql_db:
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Creates database for WordPress
  become: true
  mysql_db:
    name: "{{ mysql_db }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Create MySQL user for WordPress
  become: true
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: "{{ mysql_db }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

# UFW Configuration
- name: "UFW - Allow HTTP on port {{ http_port }}"
  become: true
  ufw:
    rule: allow
    port: "{{ http_port }}"
    proto: tcp
  tags: [ system ]

# WordPress Configuration
- name: Create the pwslab directory if it does not exist
  become: true
  file:
    path: /var/www/{{ http_host }}
    state: directory
    mode: '0755'
    
- name: Download and unpack latest WordPress
  become: true
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www/{{ http_host }}"
    remote_src: yes
    creates: "/var/www/{{ http_host }}/wordpress"
  tags: [ wordpress ]

- name: Set ownership
  become: true
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  tags: [ wordpress ]

- name: Set permissions for directories
  become: true
  shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
  tags: [ wordpress ]

- name: Set permissions for files
  become: true
  shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
  tags: [ wordpress ]

- name: Set up wp-config
  become: true
  template:
    src: "wp-config.php.j2"
    dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
  tags: [ wordpress ]

  
