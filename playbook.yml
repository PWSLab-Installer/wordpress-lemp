- hosts: localhost
  connection: local

  vars:
    php_version: '7.2'
    php_default_version_debian: '7.2'
    php_webserver_daemon: "nginx"
    php_packages_state: latest
    mysql_databases: 
      - name: wordpress

  tasks:
      
    - name: Fetch WordPress Lemp Role
      git:
        repo: https://ro:uREXa6AXL22sDdiqbUUV@pwslab.org/ansible/wordpress-lemp.git
        dest: /root/.ansible/roles/pwslab.wlemp
        version: master
        force: yes

    - name: Install Role NGINX
      local_action: command ansible-galaxy install -f geerlingguy.nginx 

    - name: Install Role REMI
      local_action: command ansible-galaxy install -f geerlingguy.repo-remi 

    - name: Install Role MYSQL
      local_action: command ansible-galaxy install -f geerlingguy.mysql

    - name: Install Role PHP
      local_action: command ansible-galaxy install -f geerlingguy.php

    - name: Install Role PHP-VERSIONS
      local_action: command ansible-galaxy install -f geerlingguy.php-versions

    - name: Check if Nginx is already installed
      stat: path=/usr/sbin/nginx
      register: nginx_exists

    - name: Check if PHP is already installed
      stat: path=/usr/bin/php
      register: php_exists

    - name: Check if MYSQL is already installed
      stat: path=/usr/bin/mysql
      register: mysql_exists

    - name: Applying role Nginx
      command: mv ~/.ansible/roles/geerlingguy.nginx ~/.ansible/roles/pwslab.nginx
      when: not nginx_exists.stat.exists
      ignore_errors: yes

    - name: Applying role PHP
      command: mv ~/.ansible/roles/geerlingguy.php ~/.ansible/roles/pwslab.php
      when: not php_exists.stat.exists
      ignore_errors: yes

    - name: Applying role PHP-Versions
      command: mv ~/.ansible/roles/geerlingguy.php-versions ~/.ansible/roles/pwslab.php-versions
      when: not php_exists.stat.exists
      ignore_errors: yes

    - name: Applying role REMI
      command: mv ~/.ansible/roles/geerlingguy.repo-remi  ~/.ansible/roles/pwslab.repo-remi 
      when: not php_exists.stat.exists
      ignore_errors: yes

    - name: Applying role MYSQL
      command: mv ~/.ansible/roles/geerlingguy.mysql ~/.ansible/roles/pwslab.mysql
      when: not mysql_exists.stat.exists
      ignore_errors: yes

    - name: Check the version of CentOS
      command: cat /etc/centos-release
      register: cent_os
      ignore_errors: yes

    - name: Check the version of Ubuntu
      shell: |
        lsb_release -d
      register: ubuntu_os
      ignore_errors: yes

    - name: Applying replacement on CentOS
      lineinfile:
          dest: ~/.ansible/roles/pwslab.php/vars/Debian.yml
          regexp: '^__php_webserver_daemon: '
          line: '__php_webserver_daemon: "nginx"'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS")
    
    - name: Applying replacement on Ubuntu
      lineinfile:
          dest: ~/.ansible/roles/pwslab.php/vars/Debian.yml
          regexp: '^__php_webserver_daemon: '
          line: '__php_webserver_daemon: "nginx"'
          state: present
      when:
        - ubuntu_os.stdout | regex_search("Ubuntu")

    - name: Installing NGINX
      include_role:
        name: pwslab.nginx
      when: not nginx_exists.stat.exists
    
    - name: Installing MYSQL
      include_role:
          name: pwslab.mysql
      when: not mysql_exists.stat.exists

    - name: Installing Remi
      include_role:
          name: pwslab.repo-remi 
      when: cent_os.stdout | regex_search("CentOS")

    - name: Installing PHP-Versions
      include_role:
          name: pwslab.php-versions
      when: 
        - not php_exists.stat.exists
        - not cent_os.stdout | regex_search("CentOS Linux release 8")

    - name: Installing PHP
      include_role:
          name: pwslab.php
      when: not php_exists.stat.exists

    - name: Applying replacement on CentOS
      lineinfile:
          dest: /etc/php-fpm.d/www.conf
          regexp: '^listen = '
          line: 'listen = /var/run/php{{ php_version }}-fpm.sock'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 7")

    - name: Applying replacement on CentOS
      lineinfile:
          dest: /etc/php-fpm.d/www.conf
          regexp: '^;listen.owner'
          line: 'listen.owner = nginx'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 7")

    - name: Applying replacement on CentOS
      lineinfile:
          dest: /etc/php-fpm.d/www.conf
          regexp: '^;listen.group'
          line: 'listen.group = nginx'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 7")

    - name: Applying replacement on CentOS
      lineinfile:
          dest: /etc/php-fpm.d/www.conf
          regexp: '^;listen.mode'
          line: 'listen.mode = 0660'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 7")

    - name: Update php Version 
      lineinfile:
          dest: ~/.ansible/roles/pwslab.wlemp/templates/nginx.conf.j2
          regexp: '^                fastcgi_pass unix:'
          line: 'fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;'
          state: present
      when:
        - ubuntu_os.stdout | regex_search("20.04")

    - name: Update php Version 
      lineinfile:
          dest: ~/.ansible/roles/pwslab.wlemp/templates/nginx.conf.j2
          regexp: '^                fastcgi_pass unix:'
          line: 'fastcgi_pass unix:/var/run/php-fpm/www.sock;'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 8")

    - name: Update php Version 
      lineinfile:
          dest: ~/.ansible/roles/pwslab.wlemp/templates/nginx.conf.j2
          regexp: '^                fastcgi_pass unix:'
          line: 'fastcgi_pass unix:/var/run/php{{ php_version }}-fpm.sock;'
          state: present
      when:
        - cent_os.stdout | regex_search("CentOS Linux release 7")

    - name: Installing LEMP WORDPRESS
      include_role:
        name: pwslab.wlemp
      # when:
      #   - not nginx_exists.stat.exists and not php_exists.stat.exists and not mysql_exists.stat.exists
